CREATE TABLE IF NOT EXISTS DAS.ACCOUNT_ROLE_APPLICATION_STATUS (
  ID               INTEGER PRIMARY KEY NOT NULL,
  NAME             TEXT                NOT NULL UNIQUE,
  DATETIME_CREATED TIMESTAMP           NOT NULL DEFAULT NOW(),
  DATETIME_UPDATED TIMESTAMP           NOT NULL DEFAULT NOW()
);

INSERT INTO DAS.ACCOUNT_ROLE_APPLICATION_STATUS (ID, NAME)
VALUES (1, 'Approved');
INSERT INTO DAS.ACCOUNT_ROLE_APPLICATION_STATUS (ID, NAME)
VALUES (2, 'Rejected');
INSERT INTO DAS.ACCOUNT_ROLE_APPLICATION_STATUS (ID, NAME)
VALUES (3, 'Pending');

CREATE TABLE IF NOT EXISTS DAS.ACCOUNT_ROLE_APPLICATION (
  ID                SERIAL PRIMARY KEY NOT NULL,
  ACCOUNT_ID        INTEGER            NOT NULL REFERENCES DAS.ACCOUNT (ID),
  APPLIED_ROLE_ID   INTEGER            NOT NULL REFERENCES DAS.ACCOUNT_TYPE (ID),
  DESCRIPTION       TEXT               NOT NULL,
  STATUS_ID         INTEGER            NOT NULL REFERENCES DAS.ACCOUNT_ROLE_APPLICATION_STATUS (ID),
  APPROVAL_USER_ID  INTEGER REFERENCES DAS.ACCOUNT (ID),
  DATETIME_APPROVED TIMESTAMP,
  CREATE_USER_ID    INTEGER            NOT NULL REFERENCES DAS.ACCOUNT (ID),
  DATETIME_CREATED  TIMESTAMP          NOT NULL DEFAULT NOW(),
  UPDATE_USER_ID    INTEGER            NOT NULL REFERENCES DAS.ACCOUNT (ID),
  DATETIME_UPDATED  TIMESTAMP          NOT NULL DEFAULT NOW()
);

CREATE INDEX ON DAS.ACCOUNT_ROLE_APPLICATION (ACCOUNT_ID);
CREATE INDEX ON DAS.ACCOUNT_ROLE_APPLICATION (STATUS_ID);
CREATE INDEX ON DAS.ACCOUNT_ROLE_APPLICATION (APPROVAL_USER_ID);
CREATE INDEX ON DAS.ACCOUNT_ROLE_APPLICATION (CREATE_USER_ID);
CREATE INDEX ON DAS.ACCOUNT_ROLE_APPLICATION (UPDATE_USER_ID);
CREATE INDEX ON DAS.ACCOUNT_ROLE_APPLICATION (DATETIME_CREATED);
