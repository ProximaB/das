-- Create table das.country
-- Indexed Columns: COUNTRY_ID, COUNTRY_NAME, COUNTRY_ABBR
CREATE TABLE IF NOT EXISTS DAS.COUNTRY (
  ID SERIAL NOT NULL PRIMARY KEY,
  NAME TEXT NOT NULL UNIQUE, -- indexed
  ABBREVIATION VARCHAR(8) NOT NULL UNIQUE, -- indexed
  CREATE_USER_ID INTEGER REFERENCES DAS.ACCOUNT (ID),
  DATETIME_CREATED TIMESTAMP NOT NULL DEFAULT NOW(),
  UPDATE_USER_ID INTEGER REFERENCES DAS.ACCOUNT (ID),
  DATETIME_UPDATED TIMESTAMP NOT NULL DEFAULT NOW()
);


INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('USA','United States');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('CAN','Canada');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('ALB','Albania');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('AND','Andorra');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('ARG','Argentina');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('ARM','Armenia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('AUS','Australia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('AUT','Austria');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('AZE','Azerbaijan');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('BAH','Bahamas');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('BAR','Barbados');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('BLR','Belarus');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('BEL','Belgium');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('BIZ','Belize');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('BIH','Bosnia and Herzegovina');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('BRA','Brazil');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('BUL','Bulgaria');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('CHI','Chile');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('CRO','Croatia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('CYP','Cyprus');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('CZE','Czech Republic');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('DEN','Denmark');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('EST','Estonia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('FIN','Finland');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('FRA','France');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('GEO','Georgia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('GER','Germany');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('GBR','Great Britain');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('GRE','Greece');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('HKG','Hong Kong');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('HUN','Hungary');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('ISL','Iceland');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('IND','India');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('IRL','Ireland');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('ISR','Israel');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('ITA','Italy');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('JPN','Japan');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('LAT','Latvia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('LIE','Liechtenstein');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('LTU','Lithuania');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('LUX','Luxembourg');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('MKD','Macedonia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('MAS','Malaysia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('MLT','Malta');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('MEX','Mexico');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('MDA','Moldova');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('MON','Monaco');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('MNE','Montenegro');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('NED','Netherlands');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('NOR','Norway');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('NZL','New Zealand');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('POL','Poland');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('POR','Portugal');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('ROU','Romania');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('RUS','Russia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('SRB','Serbia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('SIN','Singapore');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('SVK','Slovakia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('SLO','Slovenia');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('RSA','South Africa');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('KOR','South Korea');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('ESP','Spain');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('SWE','Sweden');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('SUI','Switzerland');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('TWN','Taiwan');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('TUR','Turkey');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('UKR','Ukraine');
INSERT INTO DAS.COUNTRY(ABBREVIATION, NAME) VALUES('VIE','Vietnam');

-- Get_Country_By_Id returns a table of country where ID is cid
-- To invoke this method in CLI or Go, run query `SELECT * FROM GET_COUNTRY_BY_ID (1);`
CREATE OR REPLACE FUNCTION get_country_by_id (cid INTEGER)
RETURNS TABLE (
  ID INTEGER,
  NAME TEXT,
  ABBREVIATION VARCHAR(8),
  CREATE_USER_ID INTEGER,
  DATETIME_CREATED TIMESTAMP,
  UPDATE_USER_ID INTEGER,
  DATETIME_UPDATE TIMESTAMP
)
AS
  $$
  BEGIN
    RETURN QUERY SELECT
       DAS.COUNTRY.ID,
       DAS.COUNTRY.NAME,
       DAS.COUNTRY.ABBREVIATION,
       DAS.COUNTRY.CREATE_USER_ID,
       DAS.COUNTRY.DATETIME_CREATED,
       DAS.COUNTRY.UPDATE_USER_ID,
       DAS.COUNTRY.DATETIME_UPDATED
    FROM DAS.COUNTRY
    WHERE DAS.COUNTRY.ID = cid;
  END;
  $$
LANGUAGE PLPGSQL;