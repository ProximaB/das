// Code generated by MockGen. DO NOT EDIT.
// Source: ./businesslogic/gender.go

// Package mock_businesslogic is a generated GoMock package.
package mock_businesslogic

import (
	businesslogic "github.com/DancesportSoftware/das/businesslogic"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIGenderRepository is a mock of IGenderRepository interface
type MockIGenderRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIGenderRepositoryMockRecorder
}

// MockIGenderRepositoryMockRecorder is the mock recorder for MockIGenderRepository
type MockIGenderRepositoryMockRecorder struct {
	mock *MockIGenderRepository
}

// NewMockIGenderRepository creates a new mock instance
func NewMockIGenderRepository(ctrl *gomock.Controller) *MockIGenderRepository {
	mock := &MockIGenderRepository{ctrl: ctrl}
	mock.recorder = &MockIGenderRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIGenderRepository) EXPECT() *MockIGenderRepositoryMockRecorder {
	return m.recorder
}

// GetAllGenders mocks base method
func (m *MockIGenderRepository) GetAllGenders() ([]businesslogic.Gender, error) {
	ret := m.ctrl.Call(m, "GetAllGenders")
	ret0, _ := ret[0].([]businesslogic.Gender)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllGenders indicates an expected call of GetAllGenders
func (mr *MockIGenderRepositoryMockRecorder) GetAllGenders() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllGenders", reflect.TypeOf((*MockIGenderRepository)(nil).GetAllGenders))
}
