// Code generated by MockGen. DO NOT EDIT.
// Source: ./businesslogic/reference/age.go

// Package mock_referencebll is a generated GoMock package.
package mock_referencebll

import (
	reference "github.com/DancesportSoftware/das/businesslogic/reference"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIAgeRepository is a mock of IAgeRepository interface
type MockIAgeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIAgeRepositoryMockRecorder
}

// MockIAgeRepositoryMockRecorder is the mock recorder for MockIAgeRepository
type MockIAgeRepositoryMockRecorder struct {
	mock *MockIAgeRepository
}

// NewMockIAgeRepository creates a new mock instance
func NewMockIAgeRepository(ctrl *gomock.Controller) *MockIAgeRepository {
	mock := &MockIAgeRepository{ctrl: ctrl}
	mock.recorder = &MockIAgeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIAgeRepository) EXPECT() *MockIAgeRepositoryMockRecorder {
	return m.recorder
}

// CreateAge mocks base method
func (m *MockIAgeRepository) CreateAge(age *reference.Age) error {
	ret := m.ctrl.Call(m, "CreateAge", age)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAge indicates an expected call of CreateAge
func (mr *MockIAgeRepositoryMockRecorder) CreateAge(age interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAge", reflect.TypeOf((*MockIAgeRepository)(nil).CreateAge), age)
}

// SearchAge mocks base method
func (m *MockIAgeRepository) SearchAge(criteria reference.SearchAgeCriteria) ([]reference.Age, error) {
	ret := m.ctrl.Call(m, "SearchAge", criteria)
	ret0, _ := ret[0].([]reference.Age)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchAge indicates an expected call of SearchAge
func (mr *MockIAgeRepositoryMockRecorder) SearchAge(criteria interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchAge", reflect.TypeOf((*MockIAgeRepository)(nil).SearchAge), criteria)
}

// UpdateAge mocks base method
func (m *MockIAgeRepository) UpdateAge(age reference.Age) error {
	ret := m.ctrl.Call(m, "UpdateAge", age)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAge indicates an expected call of UpdateAge
func (mr *MockIAgeRepositoryMockRecorder) UpdateAge(age interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAge", reflect.TypeOf((*MockIAgeRepository)(nil).UpdateAge), age)
}

// DeleteAge mocks base method
func (m *MockIAgeRepository) DeleteAge(age reference.Age) error {
	ret := m.ctrl.Call(m, "DeleteAge", age)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAge indicates an expected call of DeleteAge
func (mr *MockIAgeRepositoryMockRecorder) DeleteAge(age interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAge", reflect.TypeOf((*MockIAgeRepository)(nil).DeleteAge), age)
}
